<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)->last</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel->[lodgersLabelSingularOrPlural] arrived</li>
    <li>lodgersArriveLetterText->[lodgersSingularOrPluralDef] [hasHave] arrived. [lodgersPronoun] will stay with you for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.</li>
    <li>hasHave(lodgerCount==1)->has</li>
    <li>hasHave(lodgerCount>=2)->have</li>
    <li>appalledButNoAction->The {PAWNSALIVECOUNT_multiple ? others seem : last [lodgersLabel] is} appalled at this, but {PAWNSALIVECOUNT_multiple ? are: is} not taking action against you.</li>
    <li>othersWillNotAccept->The {PAWNSALIVECOUNT_multiple ? others are : last [lodgersLabel] is} not willing to accept this</li>
    <li>turnedViolent->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } turned violently against you.</li>
    <li>decidedToLeave->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } decided to leave.</li>
    <li>whoAskedToStay->who asked to stay with you</li>
    <li>oneOfThe->one of the desperate [faction_pawnsPlural] who asked to stay with you</li>
    <li>questOver->The quest '[resolvedQuestName]' is over.</li>
    <li>letterIntroDeath->{SUBJECT_definite}, [oneOfThe] has died.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel->[lodgersLabel] died: Anger</li>
    <li>lodgerDiedMemoryThoughtLetterText->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel->[lodgersLabel] died: Revenge</li>
    <li>lodgerDiedAttackPlayerLetterText->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel->[lodgersLabel] died: Departure</li>
    <li>lodgerDiedLeaveMapLetterText->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel->Quest failed</li>
    <li>lodgersAllDiedLetterText->{SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay], has died.\n\n[questOver]</li>
    <li>letterIntroArrested->You arrested {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel->[lodgersLabel] arrested: Anger</li>
    <li>lodgerArrestedMemoryThoughtLetterText->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel->[lodgersLabel] arrested: Revenge</li>
    <li>lodgerArrestedAttackPlayerLetterText->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel->[lodgersLabel] arrested: Departure</li>
    <li>lodgerArrestedLeaveMapLetterText->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel->Quest failed</li>
    <li>lodgersAllArrestedLetterText->You arrested {SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay].\n\n[questOver]</li>
    <li>letterIntroViolated->{SUBJECT_definite}, [oneOfThe], was violated by surgery.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel->[lodgersLabel] violated: Anger</li>
    <li>lodgerViolatedMemoryThoughtLetterText->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel->[lodgersLabel] violated: Revenge</li>
    <li>lodgerViolatedAttackPlayerLetterText->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel->[lodgersLabel] arrested: Departure</li>
    <li>lodgerViolatedLeaveMapLetterText->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel->Betrayal</li>
    <li>mutinyLetterText->[lodgersSingularOrPluralDef] [whoAskedToStay] [areIs] turning against you!\n\nIt seems [lodgersPronoun] had this treachery planned all along.</li>
    <li>areIs(lodgerCount==1)->is</li>
    <li>areIs(lodgerCount>=2)->are</li>
    <li>betrayalOfferLetterLabel->Betrayal offer: [factionOpponent_nameDef]</li>
    <li>betrayalOffserLetterText->[factionOpponent_nameDef], a [factionOpponent_faction_pawnSingular] of [factionOpponent_faction_name], has learned that [asker_nameDef] [otherLodgers] [areIs] being hosted at [map_definite]. [factionOpponent_pronoun] is enemies with [asker_nameDef] and wants to see [asker_objective] dead.\n\n[factionOpponent_pronoun] will send you the following reward if you kill all members of [faction_name] (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards]</li>
    <li>betrayalOfferRewardLetterLabel->Betrayal reward: [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText->[factionOpponent_nameDef] promised you a reward if you killed [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] has heard news this has been done and is sending you the following via drop pod (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedLetterLabel->Betrayal reward retracted</li>
    <li>betrayalOfferFailedLetterText->[factionOpponent_nameDef] has learned that one of the members of the [faction_name] is no longer at [map_definite]. [factionOpponent_nameDef] wanted all members of the [faction_name] to die and has therefore retracted [factionOpponent_possessive] offer.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->and another [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->and several [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> and all other members of the [faction_name]</li>
    <li>lodgersLeavingLetterLabel->[lodgersLabelSingularOrPlural] leaving</li>
    <li>lodgersLeavingLetterText->{FACTION_leaderNameDef} thanks you for allowing {FACTION_leaderObjective} to stay at [map_definite] for these [questDurationTicks_duration]. {FACTION_leaderPronoun} is now moving on with {FACTION_leaderPossessive} people.\n\n{FACTION_leaderNameDef} says {FACTION_leaderPronoun} won't forget what youâ€™ve done.</li>
  -->
  <Hospitality_Refugee.questContentRules.rulesStrings>
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)-><!--TODO-->last</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)-><!--TODO-->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)-><!--TODO-->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel-><!--TODO-->[lodgersLabelSingularOrPlural] arrived</li>
    <li>lodgersArriveLetterText-><!--TODO-->[lodgersSingularOrPluralDef] [hasHave] arrived. [lodgersPronoun] will stay with you for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.</li>
    <li>hasHave(lodgerCount==1)-><!--TODO-->has</li>
    <li>hasHave(lodgerCount>=2)-><!--TODO-->have</li>
    <li>appalledButNoAction-><!--TODO-->The {PAWNSALIVECOUNT_multiple ? others seem : last [lodgersLabel] is} appalled at this, but {PAWNSALIVECOUNT_multiple ? are: is} not taking action against you.</li>
    <li>othersWillNotAccept-><!--TODO-->The {PAWNSALIVECOUNT_multiple ? others are : last [lodgersLabel] is} not willing to accept this</li>
    <li>turnedViolent-><!--TODO-->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } turned violently against you.</li>
    <li>decidedToLeave-><!--TODO-->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } decided to leave.</li>
    <li>whoAskedToStay-><!--TODO-->who asked to stay with you</li>
    <li>oneOfThe-><!--TODO-->one of the desperate [faction_pawnsPlural] who asked to stay with you</li>
    <li>questOver-><!--TODO-->The quest '[resolvedQuestName]' is over.</li>
    <li>letterIntroDeath-><!--TODO-->{SUBJECT_definite}, [oneOfThe] has died.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel-><!--TODO-->[lodgersLabel] died: Anger</li>
    <li>lodgerDiedMemoryThoughtLetterText-><!--TODO-->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel-><!--TODO-->[lodgersLabel] died: Revenge</li>
    <li>lodgerDiedAttackPlayerLetterText-><!--TODO-->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel-><!--TODO-->[lodgersLabel] died: Departure</li>
    <li>lodgerDiedLeaveMapLetterText-><!--TODO-->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel-><!--TODO-->Quest failed</li>
    <li>lodgersAllDiedLetterText-><!--TODO-->{SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay], has died.\n\n[questOver]</li>
    <li>letterIntroArrested-><!--TODO-->You arrested {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel-><!--TODO-->[lodgersLabel] arrested: Anger</li>
    <li>lodgerArrestedMemoryThoughtLetterText-><!--TODO-->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel-><!--TODO-->[lodgersLabel] arrested: Revenge</li>
    <li>lodgerArrestedAttackPlayerLetterText-><!--TODO-->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel-><!--TODO-->[lodgersLabel] arrested: Departure</li>
    <li>lodgerArrestedLeaveMapLetterText-><!--TODO-->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel-><!--TODO-->Quest failed</li>
    <li>lodgersAllArrestedLetterText-><!--TODO-->You arrested {SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay].\n\n[questOver]</li>
    <li>letterIntroViolated-><!--TODO-->{SUBJECT_definite}, [oneOfThe], was violated by surgery.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel-><!--TODO-->[lodgersLabel] violated: Anger</li>
    <li>lodgerViolatedMemoryThoughtLetterText-><!--TODO-->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel-><!--TODO-->[lodgersLabel] violated: Revenge</li>
    <li>lodgerViolatedAttackPlayerLetterText-><!--TODO-->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel-><!--TODO-->[lodgersLabel] arrested: Departure</li>
    <li>lodgerViolatedLeaveMapLetterText-><!--TODO-->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel-><!--TODO-->Betrayal</li>
    <li>mutinyLetterText-><!--TODO-->[lodgersSingularOrPluralDef] [whoAskedToStay] [areIs] turning against you!\n\nIt seems [lodgersPronoun] had this treachery planned all along.</li>
    <li>areIs(lodgerCount==1)-><!--TODO-->is</li>
    <li>areIs(lodgerCount>=2)-><!--TODO-->are</li>
    <li>betrayalOfferLetterLabel-><!--TODO-->Betrayal offer: [factionOpponent_nameDef]</li>
    <li>betrayalOffserLetterText-><!--TODO-->[factionOpponent_nameDef], a [factionOpponent_faction_pawnSingular] of [factionOpponent_faction_name], has learned that [asker_nameDef] [otherLodgers] [areIs] being hosted at [map_definite]. [factionOpponent_pronoun] is enemies with [asker_nameDef] and wants to see [asker_objective] dead.\n\n[factionOpponent_pronoun] will send you the following reward if you kill all members of [faction_name] (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards]</li>
    <li>betrayalOfferRewardLetterLabel-><!--TODO-->Betrayal reward: [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText-><!--TODO-->[factionOpponent_nameDef] promised you a reward if you killed [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] has heard news this has been done and is sending you the following via drop pod (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedLetterLabel-><!--TODO-->Betrayal reward retracted</li>
    <li>betrayalOfferFailedLetterText-><!--TODO-->[factionOpponent_nameDef] has learned that one of the members of the [faction_name] is no longer at [map_definite]. [factionOpponent_nameDef] wanted all members of the [faction_name] to die and has therefore retracted [factionOpponent_possessive] offer.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)-><!--TODO-->and another [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)-><!--TODO-->and several [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-><!--TODO--> and all other members of the [faction_name]</li>
    <li>lodgersLeavingLetterLabel-><!--TODO-->[lodgersLabelSingularOrPlural] leaving</li>
    <li>lodgersLeavingLetterText-><!--TODO-->{FACTION_leaderNameDef} thanks you for allowing {FACTION_leaderObjective} to stay at [map_definite] for these [questDurationTicks_duration]. {FACTION_leaderPronoun} is now moving on with {FACTION_leaderPossessive} people.\n\n{FACTION_leaderNameDef} says {FACTION_leaderPronoun} won't forget what youâ€™ve done.</li>
  </Hospitality_Refugee.questContentRules.rulesStrings>
  <!-- EN:
    <li>lodgersLabel->refugee</li>
    <li>lodgersLabelPlural->refugees</li>
  -->
  <Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
    <li>lodgersLabel-><!--TODO-->refugee</li>
    <li>lodgersLabelPlural-><!--TODO-->refugees</li>
  </Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
  <!-- EN:
    <li>offer(lodgerCount==1)->offers</li>
    <li>offer(lodgerCount>=2)->offer</li>
    <li>lodgersPronoun(lodgerCount==1)->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)->they</li>
    <li>lodgersPreposition(lodgerCount==1)->[asker_objective]self</li>
    <li>lodgersPreposition(lodgerCount>=2)->themselves</li>
    <li>lodgersObjective(lodgerCount==1)->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)->them</li>
    <li>lodgersPossessive(lodgerCount==1)->[asker_possessive]</li>
    <li>lodgersPossessive(lodgerCount>=2)->their</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)->the [lodgersLabelPlural]</li>
    <li>questDescription->[approachInfo] [claimInfo] [asker_nameDef] begs you for permission to stay at [map_definite] for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.\n\nIn return, [lodgersPronoun] [offer] to work and fight for free during that time.\n\n[joinInfo] [lodgersPronoun] may also reward you later for helping [lodgersObjective] - but there is no way to know [lodgersPossessive] true intentions.\n\n[travelerInfo] not part of any faction. If you wish, you can choose to kill, arrest, sell, or harvest [lodgersObjective], without diplomatic consequences.</li>
    <li>approachInfo(lodgerCount==1)->A desperate [faction_pawnSingular] named [asker_nameDef] is approaching.</li>
    <li>approachInfo(lodgerCount==2)->[asker_nameDef] and another desperate [faction_pawnSingular] are approaching.</li>
    <li>approachInfo(lodgerCount>=3)->[lodgerCount] desperate [faction_pawnsPlural] are approaching. Their leader is called [asker_nameDef].</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to have lost [asker_possessive] home in a recent attack.</li>
    <li>claimInfo(lodgerCount>=2)->They claim to have lost their home in a recent attack.</li>
    <li>joinInfo(lodgerCount==1)->If you make [asker_objective] happy [asker_pronoun] may offer to join you.</li>
    <li>joinInfo(lodgerCount>=1)->If you make them happy and some of them may offer to join you.</li>
    <li>travelerInfo(lodgerCount==1)->This [faction_pawnSingular] is</li>
    <li>travelerInfo(lodgerCount>=2)->These [faction_pawnsPlural] are</li>
  -->
  <Hospitality_Refugee.questDescriptionRules.rulesStrings>
    <li>offer(lodgerCount==1)-><!--TODO-->offers</li>
    <li>offer(lodgerCount>=2)-><!--TODO-->offer</li>
    <li>lodgersPronoun(lodgerCount==1)-><!--TODO-->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)-><!--TODO-->they</li>
    <li>lodgersPreposition(lodgerCount==1)-><!--TODO-->[asker_objective]self</li>
    <li>lodgersPreposition(lodgerCount>=2)-><!--TODO-->themselves</li>
    <li>lodgersObjective(lodgerCount==1)-><!--TODO-->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)-><!--TODO-->them</li>
    <li>lodgersPossessive(lodgerCount==1)-><!--TODO-->[asker_possessive]</li>
    <li>lodgersPossessive(lodgerCount>=2)-><!--TODO-->their</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)-><!--TODO-->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)-><!--TODO-->the [lodgersLabelPlural]</li>
    <li>questDescription-><!--TODO-->[approachInfo] [claimInfo] [asker_nameDef] begs you for permission to stay at [map_definite] for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.\n\nIn return, [lodgersPronoun] [offer] to work and fight for free during that time.\n\n[joinInfo] [lodgersPronoun] may also reward you later for helping [lodgersObjective] - but there is no way to know [lodgersPossessive] true intentions.\n\n[travelerInfo] not part of any faction. If you wish, you can choose to kill, arrest, sell, or harvest [lodgersObjective], without diplomatic consequences.</li>
    <li>approachInfo(lodgerCount==1)-><!--TODO-->A desperate [faction_pawnSingular] named [asker_nameDef] is approaching.</li>
    <li>approachInfo(lodgerCount==2)-><!--TODO-->[asker_nameDef] and another desperate [faction_pawnSingular] are approaching.</li>
    <li>approachInfo(lodgerCount>=3)-><!--TODO-->[lodgerCount] desperate [faction_pawnsPlural] are approaching. Their leader is called [asker_nameDef].</li>
    <li>claimInfo(lodgerCount==1)-><!--TODO-->[asker_nameDef] claims to have lost [asker_possessive] home in a recent attack.</li>
    <li>claimInfo(lodgerCount>=2)-><!--TODO-->They claim to have lost their home in a recent attack.</li>
    <li>joinInfo(lodgerCount==1)-><!--TODO-->If you make [asker_objective] happy [asker_pronoun] may offer to join you.</li>
    <li>joinInfo(lodgerCount>=1)-><!--TODO-->If you make them happy and some of them may offer to join you.</li>
    <li>travelerInfo(lodgerCount==1)-><!--TODO-->This [faction_pawnSingular] is</li>
    <li>travelerInfo(lodgerCount>=2)-><!--TODO-->These [faction_pawnsPlural] are</li>
  </Hospitality_Refugee.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName(lodgerCount==1)->[asker_nameDef] the [lodgerAdj]</li>
    <li>questName(lodgerCount==1)->[athe] [lodgerAdj] [lodgerSingle]</li>
    <li>questName(p=2,lodgerCount>=2)->[lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerPlural]</li>
    <li>athe->a</li>
    <li>athe->the</li>
    <li>lodgerAdj->tired</li>
    <li>lodgerAdj->lost</li>
    <li>lodgerAdj->destitute</li>
    <li>lodgerAdj->poor</li>
    <li>lodgerAdj->desperate</li>
    <li>lodgerAdj->sad</li>
    <li>lodgerAdj->dusty</li>
    <li>lodgerAdj->hopeless</li>
    <li>lodgerAdj->unknown</li>
    <li>lodgerAdj->forlorn</li>
    <li>lodgerAdj->forsaken</li>
    <li>lodgerSingle->traveler</li>
    <li>lodgerSingle->refugee</li>
    <li>lodgerSingle->drifter</li>
    <li>lodgerSingle->survivor</li>
    <li>lodgerSingle->nomad</li>
    <li>lodgerSingle->vagabond</li>
    <li>lodgerPlural->travelers</li>
    <li>lodgerPlural->refugees</li>
    <li>lodgerPlural->drifters</li>
    <li>lodgerPlural->survivors</li>
    <li>lodgerPlural->nomads</li>
    <li>lodgerPlural->vagabonds</li>
  -->
  <Hospitality_Refugee.questNameRules.rulesStrings>
    <li>questName(lodgerCount==1)-><!--TODO-->[asker_nameDef] the [lodgerAdj]</li>
    <li>questName(lodgerCount==1)-><!--TODO-->[athe] [lodgerAdj] [lodgerSingle]</li>
    <li>questName(p=2,lodgerCount>=2)-><!--TODO-->[lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)-><!--TODO-->[asker_nameDef]'s [lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)-><!--TODO-->[asker_nameDef]'s [lodgerPlural]</li>
    <li>athe-><!--TODO-->a</li>
    <li>athe-><!--TODO-->the</li>
    <li>lodgerAdj-><!--TODO-->tired</li>
    <li>lodgerAdj-><!--TODO-->lost</li>
    <li>lodgerAdj-><!--TODO-->destitute</li>
    <li>lodgerAdj-><!--TODO-->poor</li>
    <li>lodgerAdj-><!--TODO-->desperate</li>
    <li>lodgerAdj-><!--TODO-->sad</li>
    <li>lodgerAdj-><!--TODO-->dusty</li>
    <li>lodgerAdj-><!--TODO-->hopeless</li>
    <li>lodgerAdj-><!--TODO-->unknown</li>
    <li>lodgerAdj-><!--TODO-->forlorn</li>
    <li>lodgerAdj-><!--TODO-->forsaken</li>
    <li>lodgerSingle-><!--TODO-->traveler</li>
    <li>lodgerSingle-><!--TODO-->refugee</li>
    <li>lodgerSingle-><!--TODO-->drifter</li>
    <li>lodgerSingle-><!--TODO-->survivor</li>
    <li>lodgerSingle-><!--TODO-->nomad</li>
    <li>lodgerSingle-><!--TODO-->vagabond</li>
    <li>lodgerPlural-><!--TODO-->travelers</li>
    <li>lodgerPlural-><!--TODO-->refugees</li>
    <li>lodgerPlural-><!--TODO-->drifters</li>
    <li>lodgerPlural-><!--TODO-->survivors</li>
    <li>lodgerPlural-><!--TODO-->nomads</li>
    <li>lodgerPlural-><!--TODO-->vagabonds</li>
  </Hospitality_Refugee.questNameRules.rulesStrings>
  
  <!-- EN:
    <li>questDescription->a delayed reward for refugee quest</li>
    <li>rewardLetterLabel->Hospitality reward</li>
    <li>rewardLetterText->[lodgers0_nameDef] has contacted you. [rewardDelayTicks_duration] ago, you helped [lodgers0_objective] in desperate circumstances.\n\nSince then, [lodgers0_pronoun] has gotten back on [lodgers0_possessive] feet, and now [lodgers0_pronoun] wants to reward you properly for your help. [lodgers0_pronoun] is sending you the following via drop pod:\n\n[listOfRewards]</li>
  -->
  <RefugeeDelayedReward.questDescriptionRules.rulesStrings>
    <li>questDescription-><!--TODO-->a delayed reward for refugee quest</li>
    <li>rewardLetterLabel-><!--TODO-->Hospitality reward</li>
    <li>rewardLetterText-><!--TODO-->[lodgers0_nameDef] has contacted you. [rewardDelayTicks_duration] ago, you helped [lodgers0_objective] in desperate circumstances.\n\nSince then, [lodgers0_pronoun] has gotten back on [lodgers0_possessive] feet, and now [lodgers0_pronoun] wants to reward you properly for your help. [lodgers0_pronoun] is sending you the following via drop pod:\n\n[listOfRewards]</li>
  </RefugeeDelayedReward.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName->Refugee delayed reward</li>
  -->
  <RefugeeDelayedReward.questNameRules.rulesStrings>
    <li>questName-><!--TODO-->Refugee delayed reward</li>
  </RefugeeDelayedReward.questNameRules.rulesStrings>
  
</LanguageData>